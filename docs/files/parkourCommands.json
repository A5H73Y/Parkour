[
  {
    "command": "addjoinitem",
    "title": "Add Join Item to Course",
    "arguments": "(course) (material) (amount) [label] [unbreakable]",
    "example": "/pa addjoinitem tutorial elytra 1 \u00266Wings true",
    "description": "By default, a Course will give you the default join items (configurable). You can provide the Player with an additional specified item when they join a Course, such as Elytra or Ender pearls for a certain types of Courses etc.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "2",
    "consoleSyntax": "pac addjoinitem (course) (material) (amount) [label] [unbreakable]"
  },
  {
    "command": "cache",
    "title": "Parkour Cache commands",
    "arguments": "[course / lobby / database / parkourkit]",
    "example": "/pa addjoinitem tutorial elytra 1 \u00266Wings true",
    "description": "TODO.",
    "permission": "Parkour.Admin.*",
    "commandGroup": "4",
    "consoleSyntax": "pac cache [course / lobby / database / parkourkit]"
  },
  {
    "command": "challenge",
    "title": "Challenge a Player to a Course",
    "arguments": "(course) (player) [wager]",
    "example": "/pa challenge tutorial A5H73Y",
    "description": "You are able to challenge a Player to compete for who can complete a Course the fastest. Simply execute the command above to send a challenge to the Player, if they accept using \u0027/pa accept\u0027 then you\u0027ll both be teleported to the beginning of the Course and a countdown will initiate. When the counter reaches 0 the race will begin. The visibility of each Player is configurable. You are able to specify a wager amount which will be rewarded to the winner and deducted from the loser\u0027s economy balance.",
    "permission": "Parkour.Basic.Challenge",
    "commandGroup": "1"
  },
  {
    "command": "checkpoint",
    "title": "Create (or overwrite) a Checkpoint",
    "arguments": "[number]",
    "example": "/pa checkpoint 1",
    "description": "Made to be as automated and easy as possible. All you do is simply select (edit) a Course using \u0027/pa select (course)\u0027, then stand where you want a checkpoint to be and enter \u0027/pa checkpoint\u0027. As if by magic it\u0027s all done! If you mess up a checkpoint, you can simply override it using \u0027/pa checkpoint (number)\u0027. A pressureplate will be placed automatically.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "2"
  },
  {
    "command": "cmds",
    "title": "Display Parkour Commands",
    "arguments": "(menu)",
    "example": "/pa cmds",
    "description": "Display the Parkour commands and corresponding command menu.",
    "commandGroup": "1",
    "consoleSyntax": "pac cmds"
  },
  {
    "command": "config",
    "title": "Display Config Entry",
    "arguments": "(config key)",
    "example": "/pa config Scoreboard.Enabled",
    "description": "Used as a debug tool to identify the value of a field in the config. Will be used by support to identify any problems on the server. MySQL details are not visible.",
    "commandGroup": "4"
  },
  {
    "command": "create",
    "title": "Create and select Parkour Course",
    "arguments": "(course)",
    "example": "/pa create tutorial",
    "description": "Creating a new Parkour Course only takes 1 command, all the setup is automatic. Remember that your location and the direction you\u0027re facing is saved and then loaded once the Course is joined. By default, the Course will not be ready until set otherwise using \u0027/pa ready\u0027.",
    "permission": "Parkour.Basic.Create",
    "commandGroup": "2"
  },
  {
    "command": "createkit",
    "title": "Create ParkourKit",
    "example": "/pa createkit",
    "description": "A conversation will be started to allow you to create a new ParkourKit, which can be linked to a Course to override the default blocks. Each Material chosen must be unique, but many materials can share the same action.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "3",
    "consoleSyntax": "pac createkit"
  },
  {
    "command": "delete",
    "title": "Request Deletion Command",
    "arguments": "(course / checkpoint / lobby / kit / autostart) (argument)",
    "example": "/pa delete course tutorial",
    "description": "You can delete a Course, which will remove all information stored on the server about the Course, as well as remove all references from the database. You can delete a lobby from the server. The operation will have to be confirmed or cancelled before the change is made.",
    "permission": "Parkour.Admin.Delete",
    "commandGroup": "4",
    "consoleSyntax": "pac delete (course / checkpoint / lobby / kit / autostart) (argument)"
  },
  {
    "command": "done",
    "title": "Stop editing the Course",
    "example": "/pa done",
    "description": "Stop editing the Course you have selected.",
    "commandGroup": "2"
  },
  {
    "command": "economy",
    "title": "Display Economy information",
    "arguments": "(info / recreate / setprize / setfee)",
    "example": "/pa economy info",
    "description": "If you have linked Parkour to a compatible Economy plugin, you can perform commands to set the fee to join a Course, the prize for completing a Course and recreate all the Courses to synchronise with the config.",
    "permission": "Parkour.Admin.*",
    "commandGroup": "4",
    "consoleSyntax": "pac economy (info / recreate / setprize / setfee)"
  },
  {
    "command": "editkit",
    "title": "Edit ParkourKit",
    "example": "/pa editkit",
    "description": "A conversation will be started to allow you to edit an exising ParkourKit, you have the option to remove a material or add a new material with the corresponding action and related attributes.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "3",
    "consoleSyntax": "pac editkit"
  },
  {
    "command": "help",
    "title": "Display Parkour Help Menu",
    "arguments": "[command]",
    "example": "/pa help",
    "description": "Display Parkour Command information.",
    "commandGroup": "1"
  },
  {
    "command": "info",
    "title": "Display Player Parkour information",
    "arguments": "[player]",
    "example": "/pa info A5H73Y",
    "description": "Display all your Parkour statistics, which can include your current progress through a Course as well as the saved information, such as your Parkour level. Using the extra argument will allow you to display the information of a different Player.",
    "commandGroup": "1",
    "consoleSyntax": "pac info (player)"
  },
  {
    "command": "join",
    "title": "Join a Parkour Course",
    "arguments": "(course / courseId)",
    "example": "/pa join tutorial",
    "description": "You are able to join a Course using its name, without having to use the correct case. Each Course has a unique numeric identifier (courseID) which can be used to join the Course instead of its name. Once you have joined a Course, you are in \u0027Parkour Mode\u0027, which allows you to interact with the ParkourKit and track your statistics.",
    "commandGroup": "1",
    "consoleSyntax": "pac join (course) (player)"
  },
  {
    "command": "joinall",
    "title": "Display Join Courses Menu",
    "example": "/pa joinall",
    "description": "Display all the Parkour Courses available in a scrollable menu. Simply right click the Course entry to join it.",
    "permission": "Parkour.Basic.JoinAll",
    "commandGroup": "1"
  },
  {
    "command": "kit",
    "title": "Retrieve ParkourKit",
    "arguments": "[kitName]",
    "example": "/pa kit firekit",
    "description": "You can create a set of ParkourKit and name it whatever you want. Using this command you can fill your inventory with the blocks you configured. If you don\u0027t specify a ParkourKit set, it will use the Default blocks.",
    "permission": "Parkour.Basic.Kit",
    "commandGroup": "2"
  },
  {
    "command": "leaderboard",
    "title": "Display Course leaderboards",
    "arguments": "[course] [amount] [scope]",
    "example": "/pa leaderboard tutorial 10 global",
    "description": "A conversation will be started to display the leaderboards you want, whether it\u0027s the best global or personal times. If you do not wish to use the converation, you can provide the required arguments for instant results.",
    "permission": "Parkour.Basic.Leaderboard",
    "commandGroup": "1",
    "consoleSyntax": "pac leaderboard (course) (amount)"
  },
  {
    "command": "leave",
    "title": "Leave a Parkour Course",
    "example": "/pa leave",
    "description": "Leaving the Course you are currently playing will terminate all information tracking your current progress, and you will be teleported back to the Parkour lobby.",
    "commandGroup": "1",
    "consoleSyntax": "pac leave (player)"
  },
  {
    "command": "link",
    "title": "Link the Course after completion",
    "arguments": "(course / lobby) (argument)",
    "example": "/pa link course level2",
    "description": "You are now able to link the selected Course to either a custom lobby, or to join a different Course straight after you complete the selected Course. For example if you selected a Course \u0027/pa select tutorial\u0027, you would be able to make the Player join Level2 after they complete Level1 by doing \u0027/pa link course Level2\u0027, or if you wish for them to teleport to a custom lobby \u0027/pa link lobby Admin\u0027. If you want to remove the link enter \u0027/pa link reset\u0027.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "3"
  },
  {
    "command": "linkkit",
    "title": "Link a Course to ParkourKit",
    "arguments": "(course) (kit)",
    "example": "/pa linkKit tutorial firekit",
    "description": "Each Course has the ability to have a unique ParkourKit, created using the \u0027/pa createKit\u0027 command. Once linked, each type of ParkourKit material for that Course will be configured to the action you set.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "3",
    "consoleSyntax": "pac linkkit (course) (kit)"
  },
  {
    "command": "list",
    "title": "Display List Information",
    "arguments": "(courses / players / ranks / lobbies)",
    "example": "/pa list courses",
    "description": "This command can display all the Courses saved on the server in a page format, ordered by date of creation, each having their own unique numerical ID which can be used to join the Course. Display all the Players that are currently using the plugin, this includes which Course, and how many times they\u0027ve died. Display the available Parkour Ranks to be unlocked, with the required Parkour Level to achieve each. Display all custom lobbies available.",
    "commandGroup": "1",
    "consoleSyntax": "pac list (courses / players / ranks / lobbies)"
  },
  {
    "command": "listkit",
    "title": "List ParkourKit information",
    "arguments": "[kit]",
    "example": "/pa listKit firekit",
    "description": "Display all the ParkourKits available by using the command without the parameter. You can specify a kit name if you want to each material with the corresponding actions.",
    "permission": "Parkour.Basic.Kit",
    "commandGroup": "3",
    "consoleSyntax": "pac litkit [kit]"
  },
  {
    "command": "lobby",
    "title": "Teleport to Parkour lobby",
    "arguments": "[lobby]",
    "example": "/pa lobby",
    "description": "Teleport to the chosen lobby. If you do not specify a lobby it will take you to the default lobby, otherwise it will attempt to join the Lobby specified in the argument. Note that some lobbies can have a minimum Parkour level requirement.",
    "commandGroup": "1"
  },
  {
    "command": "material",
    "title": "Display Material information",
    "arguments": "[material]",
    "example": "/pa material",
    "description": "Display the matching Material information. The name of the Material in the Players hand will be displayed which can be used throughout the plugin, if an argument is provided and will display if a match was found.",
    "commandGroup": "1"
  },
  {
    "command": "perms",
    "title": "Display Parkour Permissions",
    "example": "/pa perms",
    "description": "Your Parkour permissions will be displayed based on the group permissions you have. For example, if you have \u0027Parkour.Admin.*\u0027, then you are a part of the Admin group, same for \u0027Parkour.Basic.*\u0027 etc. However, if you have been given only a selection of permissions from that group, it will not display, for example \u0027Parkour.Admin.Testmode\u0027 does not make you an admin. \u0027Parkour.*\u0027 will give you all Parkour permissions.",
    "commandGroup": "1"
  },
  {
    "command": "prize",
    "title": "Configure Course Prize",
    "arguments": "(course)",
    "example": "/pa prize tutorial",
    "description": "A conversation will be started to allow you to setup a Course prize exactly how you want, without having to enter long ugly commands.",
    "permission": "Parkour.Admin.Prize",
    "commandGroup": "3",
    "consoleSyntax": "pac prize (course)"
  },
  {
    "command": "quiet",
    "title": "Toggle Quiet Mode",
    "example": "/pa quiet",
    "description": "If the Parkour messages are becoming annoying i.e. Seeing \u0027You died! ...\u0027 regularly, you can toggle visibility of these messages using this command.",
    "commandGroup": "1"
  },
  {
    "command": "ready",
    "title": "Set Course ready status",
    "arguments": "[course]",
    "example": "/pa ready tutorial",
    "description": "When you first create a Course, it will not be joinable until it has been marked as ready by its creator (configurable). The command will toggle the ready status, so you mark it as ready or not. If you don\u0027t provide a Course parameter, your selected Course will be used.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "2"
  },
  {
    "command": "recreate",
    "title": "Recreate Course database",
    "example": "/pa recreate",
    "description": "Used to fix the database if there are missing Courses that haven\u0027t been synchronised with the server.",
    "permission": "Parkour.Admin.*",
    "commandGroup": "4",
    "consoleSyntax": "pac recreate"
  },
  {
    "command": "reload",
    "title": "Reload the Parkour Configuration.",
    "example": "/pa reload",
    "description": "Reload the Parkour Configuration files.",
    "permission": "Parkour.Admin.*",
    "commandGroup": "4",
    "consoleSyntax": "pac reload"
  },
  {
    "command": "request",
    "title": "Request a Feature / Report a Bug",
    "example": "/pa request",
    "description": "Do you have an idea for the plugin or found a bug you want to report? Click the link provided to navigate to the Parkour forums section.",
    "commandGroup": "1"
  },
  {
    "command": "reset",
    "title": "Request Reset Command",
    "arguments": "(course / player / leaderboard / prize) (argument)",
    "example": "/pa reset player A5H73Y",
    "description": "Resetting a Course will delete all the statistics stored, which includes leaderboards and various Parkour attributes. This will NOT affect the spawn / checkpoints. Resetting a Player will delete all their times across all Courses and delete all various Parkour attributes. The operation will have to be confirmed or cancelled before the change is made.",
    "permission": "Parkour.Admin.Reset",
    "commandGroup": "4",
    "consoleSyntax": "pac reset (course / player / leaderboard / prize) (argument)"
  },
  {
    "command": "respawn",
    "title": "Respawn to last Checkpoint",
    "example": "/pa respawn",
    "description": "While on a Course, you can respawn to the last achieved checkpoint.",
    "commandGroup": "1",
    "consoleSyntax": "pac respawn (player)"
  },
  {
    "command": "restart",
    "title": "Restart a Parkour Course",
    "example": "/pa restart",
    "description": "While on a Course you can restart your progress, this will reset all current progress and start the Course again.",
    "commandGroup": "1",
    "consoleSyntax": "pac restart (player)"
  },
  {
    "command": "rewarddelay",
    "title": "Reward Delay for Course",
    "arguments": "(course) (delay)",
    "example": "/pa rewarddelay tutorial 1",
    "description": "Limit a Course reward for a Player to once per day, as in the example. The rate at which the reward is given, is achieved by setting the delay to the number of hours which need to elapse before the Player can win the same prize again.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "3",
    "consoleSyntax": "pac rewarddelay (course) (delay)"
  },
  {
    "command": "rewardlevel",
    "title": "Reward a ParkourLevel",
    "arguments": "(course) (level)",
    "example": "/pa rewardlevel tutorial 5",
    "description": "You can reward a Player with a Parkour level on the completion of a Course, which will allow them to unlock new Courses which would have a minimum level requirement to join. Their level is not overwritten if their current level is higher than the reward level.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "3",
    "consoleSyntax": "pac rewardlevel (course) (level)"
  },
  {
    "command": "rewardleveladd",
    "title": "Reward Increase to ParkourLevel",
    "arguments": "(course) (amount)",
    "example": "/pa rewardleveladd tutorial 2",
    "description": "You can reward a Player with an increase to their Parkour level on the completion of a Course, which will allow them to unlock new Courses which would have a minimum level requirement to join. The amount is added to their current level.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "3",
    "consoleSyntax": "pac rewardleveladd (course) (level)"
  },
  {
    "command": "rewardonce",
    "title": "Toggle Reward Once status of Course",
    "arguments": "(course)",
    "example": "/pa rewardonce tutorial",
    "description": "Prevent a Player from rewarding themselves multiple times for completing a Course, by only allowing them to claim the reward the first time they complete the Course.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "2",
    "consoleSyntax": "pac rewardonce (course)"
  },
  {
    "command": "challengeonly",
    "title": "Toggle Challenge Only status of Course",
    "arguments": "(course)",
    "example": "/pa challengeonly tutorial",
    "description": "Prevent a Player from joining a Course unless they are currently in a Challenge.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "2",
    "consoleSyntax": "pac challengeonly (course)"
  },
  {
    "command": "rewardparkoins",
    "title": "Reward Parkoins",
    "arguments": "(course) (amount)",
    "example": "/pa rewardparkoins tutorial 10",
    "description": "You can reward a Player with Parkoins for completing a Course. These can be spent in the store to unlock additional content which would be unobtainable without the minimum amount of Parkoins required.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "3",
    "consoleSyntax": "pac rewardparkoins (course) (amount)"
  },
  {
    "command": "rewardrank",
    "title": "Reward a ParkourRank for ParkourLevel",
    "arguments": "(level) (rank)",
    "example": "/pa rewardrank 4 \u00264Pro",
    "description": "You can link a Parkour level to a rank, which would display beside their name if you enable the Parkour Chat Prefix setting. This would allow you to differentiate each Parkour level a Player is, based on their rank.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "3",
    "consoleSyntax": "pac rewardrank (level) (rank)"
  },
  {
    "command": "select",
    "title": "Start editing the Course",
    "arguments": "(course)",
    "example": "/pa select tutorial",
    "description": "Many of the commands don\u0027t require a Course argument as they will use the Course you are editing to make things a bit easier. For example \u0027/pa checkpoint\u0027 will use the Course you are currently editing. If you want to find out which Course you are currently editing use \u0027/pa select\u0027. When you create a Course, it will automatically select it for editing.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "2"
  },
  {
    "command": "setautostart",
    "title": "Create AutoStart for Course",
    "arguments": "(course)",
    "example": "/pa setautostart tutorial",
    "description": "Create a pressure plate that will automatically trigger an automatic start of the Course specified in the argument. A configured Material will appear below the pressure plate to identify it, and for better performance.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "3"
  },
  {
    "command": "setcourse",
    "title": "Set Course Attributes",
    "arguments": "(course) (creator / minlevel / maxdeath / maxtime / message) (value)",
    "example": "/pa setcourse tutorial creator A5H73Y",
    "description": "Quickly set Course attributes using a simple command. If a message is provided, an additional argument must match a message type and the following arguments will be combined to make the final message; colour codes are supported.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "3",
    "consoleSyntax": "pac setcourse (course) (creator / minlevel / maxdeath / maxtime / message) (value)"
  },
  {
    "command": "setcreator",
    "title": "Set Creator of a Course",
    "arguments": "(course) (player)",
    "example": "/pa setcreator tutorial A5H73Y",
    "description": "The creator of the Course will be overwritten to what you\u0027ve specified. Helpful if an Admin has to setup the Course which a non-admin player created. The creator of a Course will have certain permissions for that Course, regardless of if they are an Admin.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "3"
  },
  {
    "command": "setlevel",
    "title": "Set Player\u0027s ParkourLevel",
    "arguments": "(player) (level)",
    "example": "/pa setlevel A5H73Y 10",
    "description": "You are able to manually set a Player\u0027s ParkourLevel. Used to quickly test you\u0027ve setup requirements correctly, or to reward a Player manually.",
    "permission": "Parkour.Admin.*",
    "commandGroup": "4"
  },
  {
    "command": "setlobby",
    "title": "Set a Parkour lobby",
    "arguments": "[name] [levelRequired]",
    "example": "/pa setlobby city 10",
    "description": "Create a lobby where you are stood, specifying its name and a level requirement to join. You are able to link Courses to lobbies after completion.",
    "permission": "Parkour.Admin.*",
    "commandGroup": "4"
  },
  {
    "command": "setmaxdeath",
    "title": "Set Maximum Deaths for Course",
    "arguments": "(course) (amount)",
    "example": "/pa setmaxdeath tutorial 5",
    "description": "By default, a Course does not have a maximum amount of deaths. However, you can enforce a limit on the amount of deaths the Player can accumulate before being forced to leave the Course.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "2"
  },
  {
    "command": "setmaxtime",
    "title": "Set Time Limit for Course",
    "arguments": "(course) (seconds)",
    "example": "/pa setmaxtime tutorial 30",
    "description": "By default, a Course does not have a maximum time limit. However, you can enforce a time limit the Course must be completed by before being forced to leave the Course.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "2"
  },
  {
    "command": "setminlevel",
    "title": "Set Minimum ParkourLevel for Course",
    "arguments": "(course) (level)",
    "example": "/pa setminlevel tutorial 5",
    "description": "By default, a Course does not have a minimum level requirement to join. However, if you want to enforce the progression of Parkour Courses, you can require the Player to have a Parkour level greater than or equal to the minimum level specified.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "2"
  },
  {
    "command": "setmode",
    "title": "Set ParkourMode for Course",
    "arguments": "(course)",
    "example": "/pa setmode tutorial",
    "description": "By default, a Course does not have a Parkour Mode attached. Each mode can affect the interaction with the Course, an example being the \u0027Freedom\u0027 mode allows you to create and load your own checkpoints.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "3"
  },
  {
    "command": "setplayer",
    "title": "TODO",
    "arguments": "(player) (level / rank) (value)",
    "example": "/pa setmode tutorial",
    "description": "TODO.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "3",
    "consoleSyntax": "/pac setplayer (player) (level / rank) (value)"
  },
  {
    "command": "setplayerlimit",
    "title": "Set a Player limit for the Course",
    "arguments": "(course) (amount)",
    "example": "/pa setplayerlimit tutorial 1",
    "description": "You are able to limit the number of Players allowed to play the Course concurrently.",
    "permission": "Parkour.Admin.*",
    "commandGroup": "4",
    "consoleSyntax": "/pac setplayerlimit (course) (amount)"
  },
  {
    "command": "setrank",
    "title": "Set Player\u0027s ParkourRank",
    "arguments": "(player) (rank)",
    "example": "/pa setrank A5H73Y \u00266Expert",
    "description": "You are able to manually set a Player\u0027s Parkour Rank. This will instantly update their chat prefix.",
    "permission": "Parkour.Admin.*",
    "commandGroup": "4"
  },
  {
    "command": "setstart",
    "title": "Set Start of a Course",
    "example": "/pa setstart",
    "description": "The start of the selected Course will be overwritten to your current position, rather than having to recreate the Course.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "3"
  },
  {
    "command": "settings",
    "title": "Display Parkour Settings",
    "example": "/pa settings",
    "description": "Display the main Parkour settings for the server.",
    "permission": "Parkour.Admin.*",
    "commandGroup": "4",
    "consoleSyntax": "pac settings"
  },
  {
    "command": "sql",
    "title": "Display SQL information",
    "example": "/pa sql",
    "description": "Display the SQL information of the server connected to the database.",
    "permission": "Parkour.Admin.*",
    "commandGroup": "4",
    "consoleSyntax": "pac sql"
  },
  {
    "command": "stats",
    "title": "Display Course information",
    "arguments": "(course)",
    "example": "/pa stats tutorial",
    "description": "Display all the Course information and statistics, including the requirements to join and the rewards given on completion.",
    "commandGroup": "1",
    "consoleSyntax": "pac stats (course)"
  },
  {
    "command": "test",
    "title": "Toggle Parkour Test Mode",
    "arguments": "[kitName]",
    "example": "/pa test firekit",
    "description": "Test Mode can be toggled on and off using the command, this will simulate being on a generic Parkour Course. The position you start Test Mode will act as the starting point. If you specify a ParkourKit this will be simulated, otherwise the default Kit will be used.",
    "permission": "Parkour.Admin.Testmode",
    "commandGroup": "2"
  },
  {
    "command": "tp",
    "title": "Teleport to Course",
    "arguments": "(course)",
    "example": "/pa tp tutorial",
    "description": "Teleport to the start of the chosen Course. This will NOT activate \u0027Parkour Mode\u0027, but simply move you to the beginning of the Course.",
    "permission": "Parkour.Basic.TP",
    "commandGroup": "2"
  },
  {
    "command": "tpc",
    "title": "Teleport to Course Checkpoint",
    "arguments": "(course) (point)",
    "example": "/pa tpc tutorial 2",
    "description": "Teleport to the chosen checkpoint on the Course. This will NOT activate \u0027Parkour Mode\u0027, but simply move you to the chosen checkpoint on the Course.",
    "permission": "Parkour.Basic.TPC",
    "commandGroup": "2"
  },
  {
    "command": "tutorial",
    "title": "Display links to tutorials",
    "example": "/pa tutorial",
    "description": "If you wish to learn from the offical Parkour tutorials, click the link to be navigated to the tutorial section of the bukkit plugin page.",
    "commandGroup": "1"
  },
  {
    "command": "validatekit",
    "title": "Validate ParkourKit",
    "arguments": "[kitName]",
    "example": "/pa validateKit firekit",
    "description": "If you have manually created a ParkourKit, or something has gone wrong. You can validate a ParkourKit to find out where the problem has originated.",
    "permission": "Parkour.Admin.Course",
    "commandGroup": "3",
    "consoleSyntax": "pac validatekit [kitName]"
  },
  {
    "command": "whitelist",
    "title": "Whitelist a Non-Parkour Command",
    "arguments": "(command)",
    "example": "/pa whitelist help",
    "description": "Be default, non-Parkour commands are disabled during the Course unless you whitelist a command that the Players are allowed to use.",
    "permission": "Parkour.Admin.*",
    "commandGroup": "4",
    "consoleSyntax": "pac whitelist (command)"
  }
]
